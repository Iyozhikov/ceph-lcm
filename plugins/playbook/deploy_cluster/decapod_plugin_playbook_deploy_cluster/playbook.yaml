---
# Copyright (c) 2016 Mirantis Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Add custom local facts
# Can be obtained by ansible_local.ceph_{{ cluster }} section in facts
- hosts: all
  become: true
  tasks:
    - name: Ensure ansible local facts directory is created
      file:
        path: /etc/ansible/facts.d
        state: directory
        recurse: yes

    - name: Create local facts to gather ceph clusters
      template:
        src: "{{ ceph_facts_template }}"
        dest: "/etc/ansible/facts.d/ceph_{{ cluster }}.fact"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0770

    - block:
      - name: Check if proxy is required to connect to internet
        shell: grep -r /etc/apt/apt.conf.d -h -i -e 'Acquire::http::Proxy' | sed -rne 's/^[^"]+"([^"]+).*$/\1/p' | sort -u
        register: apt_http_proxy
        changed_when: false
        failed_when: false

      - name: Import Ceph repo key from keyserver without proxy
        apt_key:
          id: "{{ ceph_stable_repo_key }}"
          keyserver: "{{ ceph_stable_repo_keyserver }}"
          keyring: /etc/apt/trusted.gpg.d/ceph.gpg
        when: apt_http_proxy.stdout == ""

      - name: Import Ceph repo key from keyserver with proxy
        apt_key:
          id: "{{ ceph_stable_repo_key }}"
          keyserver: "{{ ceph_stable_repo_keyserver }}"
          keyring: /etc/apt/trusted.gpg.d/ceph.gpg
        environment:
          http_proxy: "{{ apt_http_proxy.stdout }}"
        when: apt_http_proxy.stdout != ""
      when:
        - ceph_stable_repo_keyserver is defined
        - ceph_stable_repo_key is defined


- hosts: mons
  become: True
  roles:
  - ceph-mon

- hosts: agents
  become: True
  roles:
  - ceph-agent

- hosts: osds
  become: True
  roles:
  - ceph-osd

- hosts: mdss
  become: True
  roles:
  - ceph-mds

- hosts: rgws
  become: True
  roles:
  - ceph-rgw

- hosts: nfss
  become: True
  roles:
  - ceph-nfs

- hosts: restapis
  become: True
  roles:
  - ceph-restapi

- hosts: rbdmirrors
  become: True
  roles:
  - ceph-rbd-mirror

- hosts: clients
  become: True
  roles:
  - ceph-client

- hosts: iscsigws
  become: True
  roles:
  - ceph-iscsi-gw


# Hacks for ceph-ansible setup
# Please check upstream bugs and remove these workarounds after
# proper fixes will be merged

# By default, ceph-ansible do not enable monitors so after restart
# processes won't up.
- hosts: mons
  become: true
  tasks:
  - name: Enable monitors on startup
    command: systemctl enable ceph-mon.service

# By default, ceph-ansible do not enable rgws so after restart
# processes won't up.
- hosts: rgws
  become: true
  tasks:
  - name: Create dependencies directory for ceph-target
    file: path=/etc/systemd/system/ceph.target.wants state=directory

  - name: Create symlink for RGW service
    file:
      src: /lib/systemd/system/ceph-radosgw@.service
      dest: "/etc/systemd/system/ceph.target.wants/ceph-radosgw@rgw.{{ ansible_hostname }}.service"
      state: link

  - name: Enable ceph.target
    command: systemctl enable ceph.target


# By default rest-api starts with nohup, it is not that user wants.
- hosts: restapis
  become: true
  tasks:
  - name: Create dependencies directory for ceph-target
    file: path=/etc/systemd/system/ceph.target.wants state=directory

  - name: Upload service file
    copy:
      src: "{{ restapi_template_local_path }}"
      dest: /lib/systemd/system/ceph-rest-api.service

  - name: Add rest-api to ceph-target.wants
    file:
      src: /lib/systemd/system/ceph-rest-api.service
      dest: /etc/systemd/system/ceph.target.wants/ceph-rest-api.service
      state: link

  - name: Enable ceph-rest-api target
    command: systemctl enable ceph-rest-api.service
