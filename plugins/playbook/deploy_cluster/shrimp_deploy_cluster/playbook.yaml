---

# Add custom local facts
# Can be obtained by ansible_local.ceph_{{ cluster }} section in facts
- hosts: all
  become: true
  tasks:
    - name: Ensure ansible local facts directory is created
      file:
        path: /etc/ansible/facts.d
        state: directory
        recurse: yes

    - name: Create local facts to gather ceph clusters
      template:
        src: "{{ ceph_facts_template }}"
        dest: "/etc/ansible/facts.d/ceph_{{ cluster }}.fact"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0770

- hosts: mons
  become: True
  roles:
  - ceph-mon

- hosts: agents
  become: True
  roles:
  - ceph-agent

- hosts: osds
  become: True
  roles:
  - ceph-osd

- hosts: mdss
  become: True
  roles:
  - ceph-mds

- hosts: rgws
  become: True
  roles:
  - ceph-rgw

- hosts: nfss
  become: True
  roles:
  - ceph-nfs

- hosts: restapis
  become: True
  roles:
  - ceph-restapi

- hosts: rbdmirrors
  become: True
  roles:
  - ceph-rbd-mirror

- hosts: clients
  become: True
  roles:
  - ceph-client

- hosts: iscsigws
  become: True
  roles:
  - ceph-iscsi-gw


# Hacks for ceph-ansible setup
# Please check upstream bugs and remove these workarounds after
# proper fixes will be merged

# By default, ceph-ansible do not enable monitors so after restart
# processes won't up.
- hosts: mons
  become: true
  tasks:
  - name: Enable monitors on startup
    command: systemctl enable ceph-mon.service

# By default, ceph-ansible do not enable rgws so after restart
# processes won't up.
- hosts: rgws
  become: true
  tasks:
  - name: Create dependencies directory for ceph-target
    file: path=/etc/systemd/system/ceph.target.wants state=directory

  - name: Create symlink for RGW service
    file:
      src: /lib/systemd/system/ceph-radosgw@.service
      dest: "/etc/systemd/system/ceph.target.wants/ceph-radosgw@rgw.{{ ansible_hostname }}.service"
      state: link

  - name: Enable ceph.target
    command: systemctl enable ceph.target


# By default rest-api starts with nohup, it is not that user wants.
- hosts: restapis
  become: true
  tasks:
  - name: Create dependencies directory for ceph-target
    file: path=/etc/systemd/system/ceph.target.wants state=directory

  - name: Upload service file
    copy:
      src: "{{ restapi_template_local_path }}"
      dest: /lib/systemd/system/ceph-rest-api.service

  - name: Add rest-api to ceph-target.wants
    file:
      src: /lib/systemd/system/ceph-rest-api.service
      dest: /etc/systemd/system/ceph.target.wants/ceph-rest-api.service
      state: link

  - name: Enable ceph-rest-api target
    command: systemctl enable ceph-rest-api.service
