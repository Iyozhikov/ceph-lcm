---
# Copyright (c) 2016 Mirantis Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Add custom local facts
# Can be obtained by ansible_local.ceph_{{ cluster }} section in facts
- hosts: osds
  become: true
  tasks:
    - name: Ensure ansible local facts directory is created
      file:
        path: /etc/ansible/facts.d
        state: directory
        recurse: yes

    - name: Create local facts to gather ceph clusters
      template:
        src: "{{ ceph_facts_template }}"
        dest: "/etc/ansible/facts.d/ceph_{{ cluster }}.fact"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0770

    - block:
      - name: Check if proxy is required to connect to internet
        shell: grep -r /etc/apt/apt.conf.d -h -i -e 'Acquire::http::Proxy' | sed -rne 's/^[^"]+"([^"]+).*$/\1/p' | sort -u
        register: apt_http_proxy
        changed_when: false
        failed_when: false

      - name: Import Ceph repo key from keyserver without proxy
        apt_key:
          id: "{{ ceph_stable_repo_key }}"
          keyserver: "{{ ceph_stable_repo_keyserver }}"
          keyring: /etc/apt/trusted.gpg.d/ceph.gpg
        when: apt_http_proxy.stdout == ""

      - name: Import Ceph repo key from keyserver with proxy
        apt_key:
          id: "{{ ceph_stable_repo_key }}"
          keyserver: "{{ ceph_stable_repo_keyserver }}"
          keyring: /etc/apt/trusted.gpg.d/ceph.gpg
        environment:
          http_proxy: "{{ apt_http_proxy.stdout }}"
        when: apt_http_proxy.stdout != ""
      when:
        - ceph_stable_repo_keyserver is defined
        - ceph_stable_repo_key is defined


- hosts: already_deployed
  become: true
  tasks:
    - block:
        - name: Create version files
          file:
            path: "/tmp/{{ item }}"
            state: touch
          with_items:
            - ceph_version
            - ceph_package_version

        - name: Collect Ceph version
          command: "ceph --cluster {{ cluster }} version"
          register: ceph_version
          ignore_errors: true

        - name: Collect installed package version
          command: "dpkg-query --showformat='${Version}' --show {{ ceph_version_verify_packagename|quote }}"
          register: ceph_package_version
          ignore_errors: true

        - name: Save Ceph version
          shell: "echo {{ item|quote }} >> /tmp/ceph_version"
          with_items: "{{ ceph_version.stdout_lines }}"
          when: ceph_version|succeeded

        - name: Save package version
          shell: "echo {{ item|quote }} >> /tmp/ceph_package_version"
          with_items: "{{ ceph_package_version.stdout_lines }}"
          when: ceph_package_version|succeeded

        - name: Download versions
          fetch:
            dest: "{{ fetch_directory }}/{{ inventory_hostname }}/{{ item }}"
            flat: yes
            src: "/tmp/{{ item }}"
          with_items:
            - ceph_version
            - ceph_package_version
      always:
        - name: Remove created version files
          file:
            path: "/tmp/{{ item }}"
            state: absent
          with_items:
            - ceph_version
            - ceph_package_version
      when: ceph_version_verify


- hosts: 127.0.0.1
  connection: local
  tasks:
    - block:
      - name: Verify Ceph version
        command: "decapod-ceph-version-verifier -t deb -c main -u {{ ceph_stable_repo|quote }} -d {{ ceph_stable_distro_source|quote }} -p {{ ceph_version_verify_packagename|quote }} {{ fetch_directory|quote }}"

      - name: Remove tempfiles
        file:
          path: "{{ fetch_directory }}"
          state: absent

      - name: Create fetch directory
        file:
          path: "{{ fetch_directory }}"
          state: directory
      when: ceph_version_verify


- hosts: mons
  become: True
  roles:
    - ceph-fetch-keys

- hosts: osds
  become: True
  roles:
  - ceph-osd
