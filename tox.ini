[tox]
envlist = {dev,jenkins,profile}-test, {jenkins,dev}-static, metrics, bandit, deadcode, devenv-lint, docs, ui-{build}, eggs-build
skipsdist = True

[testreqs]
commands =
    pip install -r{toxinidir}/test-requirements.txt -c{toxinidir}/constraints.txt

[projreqs]
commands =
    pip install -e{toxinidir}/backend/common
    pip install -e{toxinidir}/backend/api[keystone]
    pip install --process-dependency-links -e{toxinidir}/backend/controller
    pip install -e{toxinidir}/decapodlib
    pip install -e{toxinidir}/backend/admin
    pip install -e{toxinidir}/plugins/alerts/emails
    pip install -e{toxinidir}/plugins/playbook/server_discovery
    pip install -e{toxinidir}/plugins/playbook/playbook_helloworld
    pip install -e{toxinidir}/decapodcli[color]

[testenv]
basepython = python3
skip_install = True
recreate = True
setenv =
    VIRTUAL_ENV={envdir}
    LANG=en_US.UTF-8
    LANGUAGE=en_US:en
    LC_ALL=en_US.UTF-8
    PYTHONHASHSEED=0
passenv = CI TRAVIS
deps = setuptools<34

[testenv:dev-test]
commands =
    {[projreqs]commands}
    {[testreqs]commands}
    py.test --basetemp={envtmpdir} --cov --cov-report=term-missing {posargs} tests

[testenv:jenkins-test]
commands =
    {[projreqs]commands}
    {[testreqs]commands}
    py.test --basetemp={envtmpdir} --cov --cov-report=term-missing --cov-report html --junit-xml={toxinidir}/test-results.xml {posargs:--cov-fail-under 80} tests

[testenv:profile-test]
commands =
    {[projreqs]commands}
    {[testreqs]commands}
    py.test --basetemp={envtmpdir} --profile {posargs} tests

[testenv:dev-static]
commands =
    {[testreqs]commands}
    flake8 --show-source

[testenv:jenkins-static]
commands =
    {[testreqs]commands}
    flake8 --format pylint

[testenv:devenv-lint]
basepython = python2.7
skipinstall = True
commands =
    pip install ansible-lint -c{toxinidir}/constraints.txt
    ansible-lint {toxinidir}/devenv/devbox.yaml

[testenv:deadcode]
skipinstall = True
ignore_outcome = True
commands =
    pip install vulture -c{toxinidir}/constraints.txt
    vulture backend/api/decapod_api
    vulture backend/admin/decapod_admin
    vulture backend/common/decapod_common
    vulture backend/controller/decapod_controller
    vulture decapodlib/decapodlib
    vulture decapodcli/decapod_cli
    vulture plugins/alerts/emails/decapod_email_alerts
    vulture plugins/playbook/server_discovery

[testenv:metrics]
commands =
    {[testreqs]commands}
    radon cc --average --show-closures -e 'backend/monitoring/*,backend/ansible/*' backend decapodlib plugins/alerts
    radon raw --summary -e 'backend/monitoring/*,backend/ansible/*' backend decapodlib plugins/alerts
    radon mi -e 'backend/monitoring/*,backend/ansible/*' --show --multi backend decapodlib plugins/alerts
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' backend
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' decapodlib
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' plugins/alerts

[testenv:bandit]
skipinstall = True
ignore_outcome = True
commands =
    pip install bandit -c{toxinidir}/constraints.txt
    bandit -r backend decapodlib plugins

[testenv:docs]
changedir = {toxinidir}/docs
commands =
    {[projreqs]commands}
    pip install Sphinx sphinx-rtd-theme pygments-style-github -c{toxinidir}/constraints.txt
    make html
whitelist_externals =
    make

[testenv:eggs-build]
whitelist_externals =
    make
commands =
    make build_eggs

[testenv:ui-build]
changedir = {toxinidir}/ui
deps =
commands =
    npm install
    npm run build
whitelist_externals =
    npm
