[tox]
envlist = {dev,jenkins,profile}-test, {jenkins,dev}-static, metrics, bandit, deadcode, devenv-lint
skipsdist = True

[testenv]
basepython = python3
skip_install = True
recreate = True
setenv =
    VIRTUAL_ENV={envdir}
    LANG=en_US.UTF-8
    LANGUAGE=en_US:en
    LC_ALL=en_US.UTF-8
    PYTHONHASHSEED=0
passenv = CI TRAVIS
deps =
    -e{toxinidir}/backend/common
    -e{toxinidir}/backend/api
    -e{toxinidir}/backend/controller
    -e{toxinidir}/plugins/alerts/emails
    -e{toxinidir}/plugins/playbook/server_discovery
    -e{toxinidir}/plugins/playbook/playbook_helloworld
    -r{toxinidir}/test-requirements.txt
    -c{toxinidir}/constraints.txt

[testenv:dev-test]
commands =
    py.test --basetemp={envtmpdir} --cov --cov-report=term-missing {posargs} tests

[testenv:jenkins-test]
commands =
    py.test --basetemp={envtmpdir} --cov --cov-report=term-missing --cov-report html --junit-xml={toxinidir}/test-results.xml {posargs:--cov-fail-under 80} tests

[testenv:profile-test]
commands =
    py.test --basetemp={envtmpdir} --profile {posargs} tests

[testenv:dev-static]
deps =
    -r{toxinidir}/test-requirements.txt
    -c{toxinidir}/constraints.txt
commands =
    flake8 --show-source

[testenv:jenkins-static]
deps =
    -r{toxinidir}/test-requirements.txt
    -c{toxinidir}/constraints.txt
commands =
    flake8 --format pylint

[testenv:devenv-lint]
basepython = python2.7
deps =
    ansible-lint
    -c{toxinidir}/constraints.txt
skipinstall = True
commands =
    ansible-lint {toxinidir}/devenv/devbox.yaml

[testenv:deadcode]
deps =
    vulture
    -c{toxinidir}/constraints.txt
skipinstall = True
ignore_outcome = True
commands =
    vulture backend/api/shrimp_api
    vulture backend/common/shrimp_common
    vulture backend/controller/shrimp_controller
    vulture shrimplib/shrimplib
    vulture plugins/alerts/emails/shrimp_email_alerts
    vulture plugins/playbook/server_discovery

[testenv:metrics]
deps =
    -r{toxinidir}/test-requirements.txt
    -c{toxinidir}/constraints.txt
commands =
    radon cc --average --show-closures -e 'backend/monitoring/*,backend/ansible/*' backend shrimplib plugins/alerts
    radon raw --summary -e 'backend/monitoring/*,backend/ansible/*' backend shrimplib plugins/alerts
    radon mi -e 'backend/monitoring/*,backend/ansible/*' --show --multi backend shrimplib plugins/alerts
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' backend
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' shrimplib
    xenon -aA -mA -bB -e 'backend/ansible/*,backend/monitoring/*' plugins/alerts

[testenv:bandit]
deps =
    bandit
    -c{toxinidir}/constraints.txt
skipinstall = True
ignore_outcome = True
commands =
    bandit -r backend shrimplib plugins
